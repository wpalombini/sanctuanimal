services:
  # 1. Postgres 15
  postgres15:
    image: postgres:15.4
    container_name: orm
    restart: unless-stopped
    env_file:
      - ./packages/orm/.env
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  # 2. Firebase Emulators
  emulators:
    container_name: emulators
    restart: 'no'
    working_dir: /emulators
    ports:
      - '9099:9099'
      - '4000:4000'
      - '4400:4400'
      - '4500:4500'
    build:
      dockerfile_inline: |
        FROM node:20-alpine
        WORKDIR /emulators
        COPY ./firebase.json /emulators/firebase.json
        COPY ./.firebaserc /emulators/.firebaserc
        RUN npm install -g firebase-tools@13.15.0
    command: npx firebase emulators:start --project=sanctuanimal-ac8d0 --only auth --import=./emulators-data --export-on-exit=./emulators-data
    volumes:
      - emulators:/emulators

  # 3. Web App
  app:
    container_name: app
    command: pnpm dev
    develop:
      watch:
        - action: rebuild
          path: '.'
          ignore:
            - '**/.git/**'
            - '**/.next/**'
            - '**/node_modules/**'
            - '**/.vscode/**'
            - '**/.turbo/**'
            - '**/dist/**'
            - '**/generated/**'
            - '**/.prisma/**'
    build:
      dockerfile_inline: |
        FROM node:20-alpine
        RUN npm install -g pnpm
    stdin_open: true
    working_dir: /app
    depends_on:
      - postgres15
      - emulators
    volumes:
      - .:/app
    ports:
      - '3000:3000'

volumes:
  emulators:
  postgres:
