generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id @default(uuid()) @db.VarChar(36)
  name          String          @db.VarChar(100)
  email         String          @unique @db.VarChar(100)
  externalId    String          @db.VarChar(255)
  createdAt     DateTime        @default(now()) @db.Timestamptz(3)
  deletedAt     DateTime?       @db.Timestamptz(3)
  updatedAt     DateTime        @updatedAt @db.Timestamptz(3)
  userSanctuary UserSanctuary[]
}

model UserSanctuary {
  role        UserRole  @default(VOLUNTEER)
  createdAt   DateTime  @default(now()) @db.Timestamptz(3)
  deletedAt   DateTime? @db.Timestamptz(3)
  updatedAt   DateTime  @updatedAt @db.Timestamptz(3)
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.VarChar(36)
  sanctuary   Sanctuary @relation(fields: [sanctuaryId], references: [id])
  sanctuaryId String    @db.VarChar(36)

  @@id([userId, sanctuaryId])
}

model Sanctuary {
  id            String          @id @default(uuid()) @db.VarChar(36)
  contact       String          @db.VarChar(100)
  name          String          @db.VarChar(100)
  createdAt     DateTime        @default(now()) @db.Timestamptz(3)
  deletedAt     DateTime?       @db.Timestamptz(3)
  updatedAt     DateTime        @updatedAt @db.Timestamptz(3)
  animals       Animal[]
  userSanctuary UserSanctuary[]
}

model Animal {
  id                  String            @id @default(uuid()) @db.VarChar(36)
  name                String            @db.VarChar(100)
  species             String            @db.VarChar(100)
  breed               String            @db.VarChar(100)
  gender              String            @db.VarChar(1)
  dateOfBirth         String?           @db.VarChar(10)
  bio                 String?           @db.VarChar(1000)
  generalNotes        String?           @db.VarChar(1000)
  profileImageVersion BigInt?           @db.BigInt
  createdAt           DateTime          @default(now()) @db.Timestamptz(3)
  deletedAt           DateTime?         @db.Timestamptz(3)
  updatedAt           DateTime          @updatedAt @db.Timestamptz(3)
  sanctuary           Sanctuary         @relation(fields: [sanctuaryId], references: [id])
  sanctuaryId         String            @db.VarChar(36)
  historicalNotes     HistoricalNotes[]
}

model HistoricalNotes {
  id                 String    @id @default(uuid()) @db.VarChar(36)
  historicalNote     String    @db.VarChar(1000)
  historicalNoteType String    @db.VarChar(2)
  createdAt          DateTime  @default(now()) @db.Timestamptz(3)
  deletedAt          DateTime? @db.Timestamptz(3)
  updatedAt          DateTime  @updatedAt @db.Timestamptz(3)
  animal             Animal    @relation(fields: [animalId], references: [id])
  animalId           String    @db.VarChar(36)
}

enum UserRole {
  ADMIN
  MANAGER
  VOLUNTEER
}
